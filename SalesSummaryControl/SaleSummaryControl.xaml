<UserControl x:Class="SalesSummaryControl.SaleSummaryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
               xmlns:res="clr-namespace:denLanguageResourses;assembly=denLanguageResourses"
                xmlns:shared="clr-namespace:denWPFSharedLibrary;assembly=denWPFSharedLibrary"   
              xmlns:vm="clr-namespace:denViewModels;assembly=denViewModels"
              xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
           
             xmlns:local="clr-namespace:SalesSummaryControl" d:DataContext="{d:DesignInstance Type=vm:SalesSummaryViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="850" d:DesignWidth="800">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <shared:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid IsEnabled="{Binding IsMainViewEnabled}" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Margin="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Border BorderBrush="#dedede" BorderThickness="3" Grid.Row="0">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <UniformGrid Rows="1" Grid.Row="0" Margin="3">
                            <TextBlock Text="{x:Static res:Resources.TotalOrderCount}" Margin="3"/>
                            <TextBlock Text="{Binding TotalNumberOfOrders}"/>
                        </UniformGrid>

                    
                        <DataGrid  Grid.Row="1"
                            CanUserAddRows="False"
          ItemsSource="{Binding TinyOrdersListBox}" 
          AutoGenerateColumns="False" 
          Margin="3"
          HorizontalGridLinesBrush="Gray"
          VerticalGridLinesBrush="Gray"
                              SelectedItem="{Binding SelectedOrder}" CanUserSortColumns="False">
                        

                           
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static res:Resources.Number}" Binding="{Binding Number}" Width="auto"/>
                                <DataGridTextColumn Header="{x:Static res:Resources.CustomerName}" Binding="{Binding CustomerName}" Width="*"/>
                                <DataGridTextColumn Header="{x:Static res:Resources.Marketplace}" Binding="{Binding Marketplace}" Width="*" />
                                <DataGridTextColumn Header="{x:Static res:Resources.Country}" Binding="{Binding Country}" Width="*" />
                                <DataGridTextColumn Header="{x:Static res:Resources.ItemsLabel}" Binding="{Binding Items}" Width="auto" />
                                <DataGridTextColumn Header="{x:Static res:Resources.OrderDate}" Binding="{Binding OrderDate}" Width="*"/>
                                <DataGridTextColumn Header="{x:Static res:Resources.TotalLabel}" Binding="{Binding Total}" Width="Auto" />

                            </DataGrid.Columns>

                    </DataGrid>

                        <StackPanel Margin="3" Grid.Row="2">
                            <local:OrderDetailsOneColumn DataContext="{Binding DataContext.OrderDetailsViewModel, RelativeSource={RelativeSource AncestorType=UserControl}}"></local:OrderDetailsOneColumn>
                        </StackPanel>

                    <UniformGrid Rows="1"  Grid.Row="3" Margin="3">
                        <Button Command="{Binding PreviousWeekCommand}" Content="{x:Static res:Resources.Back7Days}" Margin="3" IsEnabled="{Binding CanSeePreviousWeeks}" />
                        <Button Command="{Binding NextWeekCommand}" Content="{x:Static res:Resources.Forward7Days}" IsEnabled="{Binding CanSeeFollowingWeek}" Margin="3"/>
                    </UniformGrid>
                </Grid>
                </Border>
            </Grid>
            <Grid Grid.Column="1" Margin="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>


                <Grid  Grid.Column="0" Grid.Row="0" Margin="3" Background="#dedede">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Column="0" VerticalAlignment="Center" Margin="3"  GroupName="DateOptionGroup"    IsChecked="{Binding IsCustomDateSelected, Mode=OneWay}"
                               Command="{Binding RadioButtonPeriodsCheckedCommand}" CommandParameter="{x:Static vm:DateOptionEnum.CustomDate}"/>
                    <TextBlock Grid.Column="1" Text="{x:Static res:Resources.CustomDateRange}" VerticalAlignment="Center" Margin="3"/>
                </Grid>


                <Grid Grid.Column="1" Grid.Row="0" Margin="3" Background="#dedede" IsEnabled="{Binding IsCustomDateSelected}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0"  Margin="3" LastChildFill="False">
                        <TextBlock Text="{x:Static res:Resources.From}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                        <DatePicker DockPanel.Dock="Right" HorizontalAlignment="Right" 
                        DisplayDateStart="{Binding OldestDate}" DisplayDateEnd="{Binding NewestDate, Mode=TwoWay}" SelectedDate="{Binding FromDate, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>


                    <DockPanel Grid.Column="1"  Margin="3" LastChildFill="False">
                        <TextBlock Text="{x:Static res:Resources.To}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                        <DatePicker DockPanel.Dock="Right" HorizontalAlignment="Right" 
                        DisplayDateStart="{Binding OldestDate}" DisplayDateEnd="{Binding NewestDate, Mode=TwoWay}" SelectedDate="{Binding ToDate, UpdateSourceTrigger=PropertyChanged}"/>
                    </DockPanel>

                </Grid>

                <Grid Grid.Column="0" Grid.Row="1" Margin="3" >

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Column="0" VerticalAlignment="Center" Margin="3"  IsChecked="{Binding IsLastQuarterSelected, Mode=OneWay}" GroupName="DateOptionGroup"
                             Command="{Binding RadioButtonPeriodsCheckedCommand}" CommandParameter="{x:Static vm:DateOptionEnum.LastQuarter}"/>
                    <TextBlock Grid.Column="1" Text="{x:Static res:Resources.LastQuarter}" VerticalAlignment="Center" Margin="3"/>
                </Grid>
                <StackPanel Grid.Row="1" Grid.Column="1" IsEnabled="{Binding IsLastQuarterSelected, Mode=OneWay}">
                    <TextBlock Text="{x:Static res:Resources.ChooseStartMonth}" HorizontalAlignment="Center" Margin="3"/>
                    <ItemsControl ItemsSource="{Binding Months}" Margin="3">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="12" Rows="1" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <RadioButton GroupName="MonthGroup" IsChecked="{Binding IsSelected, Mode=TwoWay}" Command="{Binding DataContext.MonthSelectedCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" HorizontalAlignment="Center"/>
                                    <TextBlock Text="{Binding MonthName}" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </StackPanel>
                <Grid Grid.Column="0" Grid.Row="2" Margin="3" Background="#dedede">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Column="0" VerticalAlignment="Center" Margin="3" GroupName="DateOptionGroup" IsChecked="{Binding IsLastFinancialYearSelected, Mode=OneWay}" Command="{Binding RadioButtonPeriodsCheckedCommand}" CommandParameter="{x:Static vm:DateOptionEnum.LastFinancialYear}"/>
                    <TextBlock Grid.Column="1" Text="{x:Static res:Resources.LastFinancialYear}" VerticalAlignment="Center" Margin="3"/>
                </Grid>
                <Grid Grid.Row="2" Grid.Column="1" Background="#dedede" Margin="3"></Grid>
                <Grid Grid.Column="0" Grid.Row="3" Margin="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <RadioButton Grid.Column="0" VerticalAlignment="Center" Margin="3" GroupName="DateOptionGroup" IsChecked="{Binding IsEntirePeriodSelected, Mode=OneWay}" Command="{Binding RadioButtonPeriodsCheckedCommand}" CommandParameter="{x:Static vm:DateOptionEnum.EntirePeriod}"/>
                    <TextBlock Grid.Column="1" Text="{x:Static res:Resources.EntireRecordedPeriod}" VerticalAlignment="Center" Margin="3"/>
                </Grid>
                <Grid  Grid.Column="0" Grid.Row="4" Margin="3" Background="#dedede">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{x:Static res:Resources.CompareSalesPlatforms}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" TextWrapping="Wrap"/>
                    <RadioButton Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="3" GroupName="CountriesMarketsOptionGroup" IsChecked="{Binding AreMarketsSelected, Mode=OneWay}" Command="{Binding RadioButtonCountriesMarketsCheckedCommand}" CommandParameter="{x:Static vm:MarketCountriesOptionEnum.Marketplaces}" />
                </Grid>

                <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="4" Margin="3" Background="#dedede" IsEnabled="{Binding AreMarketsSelected}">

                    <ItemsControl ItemsSource="{Binding ExtraMarkets}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="3">
                                    <CheckBox IsChecked="{Binding IsChecked}" Margin="3"/>
                                    <TextBlock Text="{Binding MarketName}" Margin="3"/>
                                    <Button Content="{x:Static res:Resources.Remove}" Command="{Binding RemoveCommand}" Margin="3" Visibility="{Binding CanRemove,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <UniformGrid Rows="1" Margin="3">
                        <ComboBox ItemsSource="{Binding Mcodes}" Margin="3" DisplayMemberPath="Name"
IsTextSearchEnabled="False"
IsEditable="False"
                              SelectedItem="{Binding SelectedMarket, Mode=TwoWay}"/>


                        <Button Content="{x:Static res:Resources.AddMarketplace}" Margin="3" IsEnabled="{Binding CanAddMarket}" Command="{Binding AddMarketPlaceCommand}"></Button>
                    </UniformGrid>

                </StackPanel>


                <Grid  Grid.Column="0" Grid.Row="5" Margin="3" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0"  Text="{x:Static res:Resources.CompareSalesCountries}" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="WrapWithOverflow" Margin="3"/>
                    <RadioButton Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="3" GroupName="CountriesMarketsOptionGroup" IsChecked="{Binding AreCountriesSelected, Mode=OneWay}" Command="{Binding RadioButtonCountriesMarketsCheckedCommand}" CommandParameter="{x:Static vm:MarketCountriesOptionEnum.Countries}"/>
                </Grid>

                <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="5" Margin="3" IsEnabled="{Binding AreCountriesSelected}">
                    <StackPanel Orientation="Horizontal"  Background="#eeeeee" Margin="3">
                        <CheckBox IsChecked="{Binding IsUKChecked}" Margin="3"/>
                        <TextBlock Text="{x:Static res:Resources.UK}" Margin="3"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="3">
                        <CheckBox IsChecked="{Binding IsEUChecked}" Margin="3"/>
                        <TextBlock Text="{x:Static res:Resources.EU}" Margin="3"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"  Background="#eeeeee" Margin="3">
                        <CheckBox IsChecked="{Binding IsEUPlusChecked}" Margin="3"/>
                        <TextBlock Text="{x:Static res:Resources.EUPlus}" Margin="3"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="3">
                        <CheckBox IsChecked="{Binding IsWorldChecked}" Margin="3"/>
                        <TextBlock Text="{x:Static res:Resources.World}" Margin="3"/>
                    </StackPanel>
                    <ItemsControl ItemsSource="{Binding ExtraCountries}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="3">
                                    <CheckBox IsChecked="{Binding IsChecked}" Margin="3"/>
                                    <TextBlock Text="{Binding CountryName}" Margin="3"/>
                                    <Button Content="{x:Static res:Resources.Remove}" Command="{Binding RemoveCommand}" Margin="3"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <UniformGrid Rows="1" Margin="3">
                        <ComboBox ItemsSource="{Binding Ccodes}" Margin="3" 
IsTextSearchEnabled="False"
IsEditable="False"
                              SelectedItem="{Binding SelectedCountry, Mode=TwoWay}"/>


                        <Button Content="{x:Static res:Resources.AddCountry}" Margin="3" IsEnabled="{Binding CanAddCountry}" Command="{Binding AddCountryCommand}"></Button>
                    </UniformGrid>

                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="1" Margin="3" Background="#dedede">
                    <Button Content="{x:Static res:Resources.GenerateData}" Margin="3" Command="{Binding GetOrdersDataCommand}"/>
                   
                </StackPanel>
                <StackPanel Grid.Row="6" Grid.Column="0" Margin="3" Background="#dedede" ></StackPanel>
                <StackPanel Grid.Row="7" Grid.Column="0" Margin="3" Background="#dedede" >
                    <TextBlock Text="{x:Static res:Resources.DataRetrievedSuccess}" Visibility="{Binding OrdersDataDownloaded ,Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="WrapWithOverflow" Margin="3"/>
                </StackPanel>
                <StackPanel Grid.Row="7" Grid.Column="1" Margin="3" Background="#dedede" >
                    <Button Content="{x:Static res:Resources.GenerateCSVFile}" IsEnabled="{Binding OrdersDataDownloaded}"  Margin="3" Command="{Binding GenerateCSVFileCommand}"/>
                    <Button Content="{x:Static res:Resources.GenerateCharts}" IsEnabled="{Binding OrdersDataDownloaded}" Margin="3" Command="{Binding ShowChartsCommand}" />
                </StackPanel>
            </Grid>
        </Grid>
        <ProgressBar Grid.Row="1" Visibility="{Binding ShowWaitingWidget,Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="True" Height="30"/>
    </Grid>
  
</UserControl>
