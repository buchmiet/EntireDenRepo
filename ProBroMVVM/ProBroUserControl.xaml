<UserControl x:Class="ProBroMVVM.ProBroUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:vm="clr-namespace:denViewModels;assembly=denViewModels" d:DataContext="{d:DesignInstance Type=proBro:ProBroViewModel}"
             xmlns:local="clr-namespace:ProBroMVVM"
              xmlns:res="clr-namespace:denLanguageResourses;assembly=denLanguageResourses"
             xmlns:shared="clr-namespace:denWPFSharedLibrary;assembly=denWPFSharedLibrary"
              xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
     xmlns:pa="clr-namespace:PngAnimator;assembly=PngAnimator"
     xmlns:proBro="clr-namespace:denViewModels.ProductBrowser.ProBro;assembly=denViewModels"
     mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
      
         <shared:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <shared:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <shared:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
        <shared:NotBooleanToVisibilityConverter x:Key="NotBooleanToVisibilityConverter"/>
        <shared:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter" />
        <shared:StringToWidthConverter x:Key="StringToWidthConverter"/>
        <shared:BoolToWidthConverter x:Key="BoolToWidthConverter"/>
        <shared:BooleanToWidthConverter x:Key="BooleanToWidthConverter"/>
        <ControlTemplate x:Key="TextBoxWithPlaceholder" TargetType="{x:Type TextBox}">
            <DockPanel>
                <Button DockPanel.Dock="Left" Content="⮜" Command="{Binding Path=PreviousCommand}" IsEnabled="{Binding CanHistoryBack}"/>
                <Button DockPanel.Dock="Right" Content="⮞" Command="{Binding Path=NextCommand}" IsEnabled="{Binding CanHistoryForward}"/>
                <Grid>
                    <TextBox 
                Text="{Binding SearchByName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                Background="Transparent"
                Padding="5,0,0,0" >
                      
                    </TextBox>
                    <TextBlock 
                Text="{TemplateBinding Tag}"
                Padding="5,0,0,0" 
                Foreground="Gray"
                IsHitTestVisible="False">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </DockPanel>
        </ControlTemplate>
        <Storyboard x:Key="fadeInAnimation">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                               Duration="0:0:0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetProperty="Opacity"
               From="0" To="1"
               Duration="0:0:0.3"/>
        </Storyboard>
        <Storyboard x:Key="fadeOutAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
             From="1" To="0"
             Duration="0:0:0.3"/>

            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.3"
                             Storyboard.TargetProperty="Visibility"
                             Duration="0:0:0">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
        </Grid.RowDefinitions>


        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
                
            </Grid.ColumnDefinitions>
            <Button Margin="3" Grid.Column="0" IsEnabled="{Binding IsNotBusy}" Command="{Binding FilterMenuCommand}" Content="{Binding FilterButtonText}"></Button>

                <TextBox Grid.Column="1"  HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3" Text="{Binding SearchByName, UpdateSourceTrigger=PropertyChanged}"  Template="{StaticResource TextBoxWithPlaceholder}" Tag="{x:Static res:Resources.EnterNameToSearch}" IsEnabled="{Binding IsNotBusy}" FontSize="24" >
                 
                </TextBox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
 
                <ColumnDefinition Width="{Binding FilteringProducts, Converter={StaticResource BooleanToWidthConverter}, ConverterParameter=Left}"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>

            <ScrollViewer Grid.Column="0" Visibility="{Binding FilteringProducts, Converter={StaticResource BooleanToVisibilityConverter}}">
            
                    <local:FilterProductsUserControl DataContext="{Binding FilterForProducts}" />
                </ScrollViewer>
           

            <Grid Grid.Column="1" >

                    <pa:PngAnimatorControl Folder="\Data\Images\PerfectCircle" 
FilePattern="frame_" 
  Going="{Binding DataContext.IsBusy, RelativeSource={RelativeSource AncestorType=UserControl}}" Panel.ZIndex="1" />

                    <DataGrid Panel.ZIndex="0" x:Name="itemsGridView1" Margin="3,3,3,3" AutoGenerateColumns="False" Grid.Row="0"
                                     HorizontalAlignment="Stretch" 
                                     CanUserAddRows="False"  SelectionMode="Single" CanUserSortColumns="True" EnableRowVirtualization="True" EnableColumnVirtualization="True" ItemsSource="{Binding ProductView}"
                     SelectedItem="{Binding SelectedItem}"
                     
                     >




                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FullName}" Value="discontinued">
                                    <Setter Property="Foreground" Value="LightGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>



                            <DataGridTextColumn  Header="{x:Static res:Resources.Number}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Number}"/>
                            <DataGridTextColumn  Header="{x:Static res:Resources.Name}" IsReadOnly="True" Width="*" Binding="{Binding FullName}"/>
                            <DataGridTextColumn  Header="{x:Static res:Resources.Quantity}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Quantity}"/>
                            <DataGridTextColumn  Header="{x:Static res:Resources.Brand}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Brand}"/>
                            <DataGridTextColumn  Header="{x:Static res:Resources.Number}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Type}"/>
                        <DataGridTextColumn  Header="MPN" IsReadOnly="True" Width="*" Binding="{Binding Mpn}"/>
                            <DataGridCheckBoxColumn  Header="{x:Static res:Resources.Tracked}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding ReadyToTrack}"/>
                            <DataGridCheckBoxColumn  Header="{x:Static res:Resources.Assigned}" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Assigned}"/>

                    </DataGrid.Columns>
                </DataGrid>
                   



                </Grid>


        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"  >

                    <Button Content="{x:Static res:Resources.AddProduct}" HorizontalAlignment="Stretch" Margin="3,3,3,3" Command="{Binding AddProductCommand}" />
                    <shared:ActiveButton ButtonContent="{x:Static res:Resources.SaveProductDetails}" 
        IsButtonEnabled="{Binding AreAnyFieldsModified}" 
        ButtonCommand="{Binding SaveProductCommand}" />


                    <Button Content="{x:Static res:Resources.TurnTrackOnOff}" HorizontalAlignment="Stretch" Margin="3,3,3,3" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Command="{Binding TurnTrackOnOffCommand}" />
                    <Button Content="{x:Static res:Resources.UpdateQuantitiesOnMarketplaces}" HorizontalAlignment="Stretch" Margin="3,3,3,3" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Command="{Binding UpdateQuantitiesOnMarketsCommand}" />
                    <Button Content="Set price on the website" HorizontalAlignment="Stretch" Margin="3,3,3,3" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Command="{Binding SetPriceOnTheWebsiteCommand}" />
                </StackPanel>

            <DockPanel Grid.Column="1" >

                <DockPanel >
                    <DockPanel  DockPanel.Dock="Top" >
                        <UniformGrid DockPanel.Dock="Left" Rows="1">
                                <TextBlock HorizontalAlignment="Left"  Margin="3,3,3,3" Text="{x:Static res:Resources.Supplier}"/>
                                <ComboBox  Margin="3,3,3,3"  IsTextSearchEnabled="False" IsEditable="False" DisplayMemberPath="Name"  IsEnabled="{Binding IsSupplierComboBoxEnabled}" SelectedItem="{Binding SelectedSupplier, Mode=TwoWay}"  ItemsSource="{Binding AvailableSuppliers}">

                            </ComboBox>

                                <Button  Margin="3,3,3,3" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Command="{Binding AssignNewSupplierCommand}" Content="{x:Static res:Resources.AssignNewSupplier}" />
                                <Button Margin="3,3,3,3" IsEnabled="{Binding CanPrintLabels}" Command="{Binding PrintLabelCommand}" Content="{x:Static res:Resources.PrintLabel}"  />
                                <Button  Margin="3,3,3,3" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Command="{Binding ViewLogsCommand}" Content="{x:Static res:Resources.Logs}" />
                            </UniformGrid>
                        <UniformGrid DockPanel.Dock="Right" Rows="1" HorizontalAlignment="Right">
                                <Button  Margin="3,3,3,3" Command="{Binding AddSupplierCommand}" Content="{x:Static res:Resources.AddSupplier}" />
                                <Button Margin="3,3,3,3" IsEnabled="False" Content="{x:Static res:Resources.RemoveSupplier}"/>
                            </UniformGrid>

                    </DockPanel>
                    <Grid VerticalAlignment="Stretch">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  Width="{Binding Col1Width,Mode=TwoWay,Converter={StaticResource StringToWidthConverter}}"/>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition  Width="{Binding Col2Width,Mode=TwoWay,Converter={StaticResource StringToWidthConverter}}" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition  Width="{Binding Col3Width,Mode=TwoWay,Converter={StaticResource StringToWidthConverter}}" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition  Width="{Binding Col4Width,Mode=TwoWay,Converter={StaticResource StringToWidthConverter}}" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.EssentialValues}" Margin="5" FontWeight="Bold"/>
                            <!--<shared:ActiveBorderListView ItemsSource="{Binding TextFieldItems}" Column1Width="2*" Column2Width="8*" ChangedBorderColor="Green"/>-->

                            <ListView Grid.Row="1"
ItemsSource="{Binding  SimpleDescription.Items}"
HorizontalAlignment="Stretch"
HorizontalContentAlignment="Stretch"
Background="White"
BorderThickness="0">

                                <ListView.Resources>
                                    <DataTemplate x:Key="TextBoxTemplate">
                                        <TextBox Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                    <DataTemplate x:Key="TextBlockTemplate48">
                                        <TextBlock Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}" FontSize="48" />
                                    </DataTemplate>
                                    <DataTemplate x:Key="TextBlockTemplate24">
                                        <TextBlock Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}" FontSize="24" IsEnabled="False" />
                                    </DataTemplate>
                                    <DataTemplate x:Key="TextBlockTemplate12">
                                        <TextBlock Text="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}" FontSize="12" IsEnabled="False" />
                                    </DataTemplate>
                                        <DataTemplate x:Key="UniformGridTemplate">
                                        <UniformGrid Rows="2" Columns="3">
                                            <TextBlock Text="{Binding SelectedValue[0]}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <TextBlock Text="{Binding SelectedValue[1]}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            <TextBlock Text="{Binding SelectedValue[2]}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </UniformGrid>
                                    </DataTemplate>
                                    <DataTemplate x:Key="ComboBoxTemplate">
                                        <ComboBox ItemsSource="{Binding Values, Mode=TwoWay}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedValue}" />
                                    </DataTemplate>
                                </ListView.Resources>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*" />
                                                <ColumnDefinition Width="8*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding FieldName}" Grid.Column="0" />

                                            <Border BorderThickness="2" HorizontalAlignment="Stretch" Grid.Column="1">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasChanged}" Value="True">
                                                                <Setter Property="BorderBrush" Value="Green" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <ContentControl Content="{Binding}">
                                                    <ContentControl.Style>
                                                        <Style TargetType="ContentControl">
                                                            <Setter Property="ContentTemplate" Value="{StaticResource TextBoxTemplate}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding FieldType}" Value="Location">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource TextBlockTemplate48}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FieldType}" Value="TextBlock24">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource TextBlockTemplate24}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FieldType}" Value="TextBlock12">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource TextBlockTemplate12}" />
                                                                </DataTrigger>
                                                                    <DataTrigger Binding="{Binding FieldType}" Value="UniformGrid">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource UniformGridTemplate}" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding FieldType}" Value="ComboBox">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ComboBoxTemplate}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>


                        </Grid>

                        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"  ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>
                        <Grid Grid.Column="2" VerticalAlignment="Stretch" x:Name="column2"  HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.Parameters}" Margin="5" FontWeight="Bold"/>

                            <ItemsControl Grid.Row="1" ItemsSource="{Binding CechyItems}" HorizontalAlignment="Stretch">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Text="{Binding CechaName}"/>

                                            <Border Grid.Column="1" BorderThickness="2">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasChanged}" Value="True">
                                                                <Setter Property="BorderBrush" Value="Green"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                    <ComboBox  IsEditable="True"
             IsTextSearchEnabled="True" ItemsSource="{Binding DostepneCechyValues, Mode=TwoWay}" DisplayMemberPath="name" SelectedItem="{Binding SelectedCechaValue}"/>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>

                        <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Stretch"  ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>
                        <Grid Grid.Column="4" VerticalAlignment="Stretch" x:Name="column3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.SoldOnMarkets}" Margin="5" FontWeight="Bold"/>


                            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                        <Button x:Name="assMarket" Margin="3" Command="{Binding AddNewMarketCommand}" IsEnabled="{Binding IsSupplierComboBoxEnabled}" Content="{x:Static res:Resources.AddMarket}"/>
                                        <ItemsControl ItemsSource="{Binding AssociatedMarkets}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                  
                                                    <TextBlock Text="{Binding MarketName}" Margin="3" />

                                                    <Button Content="X"
                  Margin="3"
                  DockPanel.Dock="Right"
                  Command="{Binding RemoveCommand}"
                  CommandParameter="{Binding Id}"/>

                                                    <!-- Edit Button -->
                                                        <Button Content="{x:Static res:Resources.Edit}"
                  Margin="3"
                  DockPanel.Dock="Left"
                  Command="{Binding EditCommand}"
                  CommandParameter="{Binding Id}"/>
                                                </DockPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>

                        <GridSplitter Grid.Column="5" Width="5" HorizontalAlignment="Stretch"  ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>
                        <Grid Grid.Column="6" VerticalAlignment="Stretch" x:Name="column4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Text="{x:Static res:Resources.Photos}" Margin="5" FontWeight="Bold"/>

                            <ScrollViewer Grid.Row="1">
                                <StackPanel>
                                    <StackPanel x:Name="fotony">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <StackPanel Grid.Row="0">
                                                    <TextBlock Text="{x:Static res:Resources.PhotoWithLogo}" Margin="5" FontWeight="Bold"  Visibility="{Binding IsSupplierComboBoxEnabled,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                <Image Source="{Binding LogoImage.pic, Converter={StaticResource ByteArrayToImageConverter}}" Stretch="Uniform" Visibility="{Binding IsLogoImageLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                                            <i:InvokeCommandAction Command="{Binding SaveImageCommand}" CommandParameter="{Binding LogoImage}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Image>
                                                <ProgressBar IsIndeterminate="False" 
   Value="{Binding LogoProgressBar}"
   Maximum="100"
   Visibility="{Binding IsLogoImageLoading, Converter={StaticResource BooleanToVisibilityConverter}}" Height="15"/>
                                                <UniformGrid Visibility="{Binding IsLogoImageLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <Button Command="{Binding UploadLogoCommand}" Content="{x:Static res:Resources.UploadPhotoWithLogo}" Margin="3" Visibility="{Binding LogoImage,Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                    <Button Command="{Binding DeleteLogoCommand}" Content="Delete" Margin="3" Visibility="{Binding LogoImage, Converter={StaticResource NullToVisibilityConverter}}" />
                                                </UniformGrid>
                                            </StackPanel>

                                            <StackPanel Grid.Row="1">
                                                    <TextBlock Text="{x:Static res:Resources.PhotoOfThePackage}" Margin="5" FontWeight="Bold"  Visibility="{Binding IsSupplierComboBoxEnabled,Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                                <Image Source="{Binding PackageImage.pic, Converter={StaticResource ByteArrayToImageConverter}}" Stretch="Uniform" Visibility="{Binding IsPackageImageLoaded, Converter={StaticResource BooleanToVisibilityConverter}}" >
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                                            <i:InvokeCommandAction Command="{Binding SaveImageCommand}" CommandParameter="{Binding PackageImage}" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Image>

                                                <ProgressBar IsIndeterminate="False"   Maximum="100" Visibility="{Binding IsPackageImageLoading, Converter={StaticResource BooleanToVisibilityConverter}}"  Value="{Binding PackageProgressBar}" Height="15"/>
                                                <UniformGrid Visibility="{Binding IsPackageImageLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <Button Command="{Binding UploadPackageCommand}" Content="{x:Static res:Resources.UploadPhotoOfPackage}" Margin="3" Visibility="{Binding PackageImage,Converter={StaticResource NotNullToVisibilityConverter}}"/>
                                                        <Button Command="{Binding DeletePackageCommand}" Content="{x:Static res:Resources.Delete}" Margin="3" Visibility="{Binding PackageImage, Converter={StaticResource NullToVisibilityConverter}}" />
                                                </UniformGrid>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>

                                        <Label Content="{x:Static res:Resources.RegularPhotos}" Margin="5" FontWeight="Bold" />
                                    <ItemsControl ItemsSource="{Binding Photos}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" Text="{Binding PicDesc}" Margin="5" Background="Transparent" FontWeight="DemiBold"></TextBlock>

                                                    <Grid Grid.Row="1">

                                                        <Image Source="{Binding Image, Converter={StaticResource ByteArrayToImageConverter}}" Visibility="{Binding IsLoaded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                            <i:Interaction.Triggers>
                                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                                    <i:InvokeCommandAction Command="{Binding SaveCommand}" />
                                                                </i:EventTrigger>
                                                            </i:Interaction.Triggers>
                                                        </Image>

                                                    </Grid>
                                                    <UniformGrid Grid.Row="2">
                                                            <Button  Command="{Binding DeleteCommand}"  Content="{x:Static res:Resources.Remove}" IsEnabled="{Binding PhotosEnabled}" Margin="3"/>
                                                            <Button Command="{Binding MoveUpCommand}" Content="{x:Static res:Resources.MoveUp}" IsEnabled="{Binding CanMoveUp}"  Margin="3" />
                                                    </UniformGrid>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                        <Button Content="{x:Static res:Resources.AddPhoto}" Margin="3" Visibility="{Binding IsSupplierComboBoxEnabled,Converter={StaticResource BooleanToVisibilityConverter}}" Command="{Binding UploadRegPhotoCommand}"></Button>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>



                    </Grid>
                </DockPanel>
            </DockPanel>
        </Grid>
       
          
        
        
        
          




     




   





    </Grid>
      
        <StackPanel Grid.Row="1" Orientation="Horizontal" Height="35">
          
            <local:ActivityStatusBar></local:ActivityStatusBar>
        </StackPanel>
    </Grid>
</UserControl>
