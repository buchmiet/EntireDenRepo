<UserControl x:Class="CurOrdMVVM.CurOrdUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:shared="clr-namespace:denWPFSharedLibrary;assembly=denWPFSharedLibrary"   
              xmlns:ts="clr-namespace:denTerminalScreen;assembly=denTerminalScreen"
              xmlns:pa="clr-namespace:PngAnimator;assembly=PngAnimator"
             xmlns:vm="clr-namespace:denViewModels;assembly=denViewModels" d:DataContext="{d:DesignInstance Type=vm:CurOrdViewModel}"
             xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
             xmlns:local="clr-namespace:CurOrdMVVM"
             xmlns:res="clr-namespace:denLanguageResourses;assembly=denLanguageResourses"
             mc:Ignorable="d"
             x:Name="CurOrdControl"
             d:DesignHeight="850" d:DesignWidth="800">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadDataCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>

        <shared:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <shared:ByteArrayToImageConverter x:Key="ByteArrayToImageConverter" />
        <shared:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <shared:NullToWidthConverter x:Key="NullToWidthConverter" />


    </UserControl.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" HorizontalAlignment="Stretch" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" >
                        <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch"  VerticalAlignment="Top"  Margin="10,10,0,0">
                            <Button Command="{Binding FetchOrdersCommand}" IsEnabled="{Binding IsFetchOrdersProcessing}" Margin="3,3,3,3" >
                                <StackPanel>
                                    <TextBlock Text="{Binding FetchOrdersButtonText}" />
                                    <ProgressBar Visibility="{Binding FetchOrdersBarVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"  IsIndeterminate="True" />
                                </StackPanel>
                            </Button>
                            <Button Content="{x:Static res:Resources.PrintCN22s}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3" Command="{Binding PrintCN22sCommand}" IsEnabled="{Binding PrintMeDependentButtonsOn}" Visibility="{Binding IsLargeLabelPrinterEnabled, Mode=TwoWay ,Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Button Command="{Binding AOBCommand}" Content="{x:Static res:Resources.AmazonOrdersBash}" IsEnabled="{Binding IsAOBRunning}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3" />
                            <Button Content="{x:Static res:Resources.GenerateDataForClickAndDrop}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3"  Command="{Binding CNDCommand}" IsEnabled="{Binding PrintMeDependentButtonsOn}" />
                            <Button  HorizontalAlignment="Stretch" VerticalAlignment="Top"  Margin="3,3,3,3" Command="{Binding PrintInvoicesCommand}" IsEnabled="{Binding CanPrint}" >
                                <StackPanel>
                                    <TextBlock Text="{Binding PrintInvoicesButtonText}" />
                                    <ProgressBar IsIndeterminate="True" Visibility="{Binding PrintInvoicesBarVisibility, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                </StackPanel>
                            </Button>

                            <Grid  Margin="3,3,3,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static res:Resources.Printer}" VerticalAlignment="Center" Grid.Column="0"/>
                                <ComboBox Grid.Column="1"
Margin="3,3,3,3"
IsTextSearchEnabled="False"
IsEditable="False"
IsEnabled="{Binding IsComboBoxEnabled}"
ItemsSource="{Binding Printers}"
SelectedItem="{Binding SelectedPrinter, Mode=TwoWay}" />
                            </Grid>
                            <Button HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3"  Command="{Binding ChangeStatusesCommand}" IsEnabled="{Binding PrintMeDependentButtonsOn}" >
                                <StackPanel>
                                    <TextBlock Text="{Binding ChangeStatusButtonText}" />
                                    <ProgressBar IsIndeterminate="True" Visibility="{Binding ChangeStatusBarVisibility, Converter={StaticResource BooleanToVisibilityConverter} }" />
                                </StackPanel>
                            </Button>
                            <Button Content="{x:Static res:Resources.PrintSummary}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3" Command="{Binding PrintSummaryCommand}" IsEnabled="{Binding PrintMeDependentButtonsOn}" />

                            <Grid  Margin="3,3,3,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="21.124"/>
                                    <ColumnDefinition Width="29.666"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static res:Resources.OrderBy}" VerticalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,0,66,0"/>
                                <ComboBox Grid.Column="2"
Margin="3,3,3,3"
IsTextSearchEnabled="False"
IsEditable="False"
IsEnabled="{Binding IsComboBoxEnabled}"
ItemsSource="{Binding OrderSortingItems}"
                                          DisplayMemberPath="Name"
SelectedItem="{Binding SelectedOrderSorthingMethod, Mode=TwoWay}" />
                            </Grid>


                            <Button Content="{x:Static res:Resources.ChangeTerminalTheme}" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="3,3,3,3" Command="{Binding NextThemeCommand}" />
                            <StackPanel Orientation="Horizontal">
                                <CheckBox x:Name="refresher" IsChecked="false" VerticalAlignment="Center"></CheckBox>
                                <Label VerticalAlignment="Center" Content="{x:Static res:Resources.RefreshOrdersEvery5Mins}"/>
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                    <Grid Grid.Row="1">

                    </Grid>


                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderBrush="LightGray" BorderThickness="1" HorizontalAlignment="Stretch">


                        <DockPanel >
                            <TextBlock Margin="3" ><Bold><Run Text="{x:Static res:Resources.SaleStatistics}" /></Bold></TextBlock>
                            <UniformGrid  Rows="1" Margin="3"  HorizontalAlignment="Stretch">
                                <TextBlock Text="{Binding SoldToday}" />
                                <TextBlock Text="{Binding SoldYday}" />
                                <TextBlock Text="{Binding SoldMonth}"/>
                            </UniformGrid>
                        </DockPanel>
                    </Border>
                    <UniformGrid Grid.Row="1" Rows="1">
                        <Button Margin="3" Content="{x:Static res:Resources.SelectAllNew}" Command="{Binding SelectAllNewCommand}" IsEnabled="{Binding SomeOrdersAreIn}" />
                        <Button Margin="3" Content="{x:Static res:Resources.SelectEbayOrders}" Command="{Binding SelectAllEbayCommand}" IsEnabled="{Binding SomeOrdersAreIn}" />
                        <Button Margin="3" Content="{x:Static res:Resources.SelectAmazonOrders}" Command="{Binding SelectAllAmazonCommand}" IsEnabled="{Binding SomeOrdersAreIn}" />
                        <Button Margin="3" Content="{x:Static res:Resources.Flip}" Command="{Binding FlipAllCommand}" IsEnabled="{Binding SomeOrdersAreIn}" />
                        <Button Margin="3" Content="{x:Static res:Resources.FlipNewOrders}" Command="{Binding FlipNewCommand}" IsEnabled="{Binding SomeOrdersAreIn}" />
                    </UniformGrid>
                    <Grid  Grid.Row="2">


                        <pa:PngAnimatorControl Folder="\Data\Images\PerfectCircle" 
                       FilePattern="frame_" 
                         Going="{Binding DataContext.IsBusy, RelativeSource={RelativeSource AncestorType=UserControl}}" Panel.ZIndex="1" />


                        <DataGrid  Panel.ZIndex="0" Margin="3,3,3,3" AutoGenerateColumns="False"  CanUserAddRows="False" CanUserSortColumns="True"  ItemsSource="{Binding Orders}" SelectedItem="{Binding SelectedOrder}"   RowDetailsVisibilityMode="VisibleWhenSelected">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding RowDoubleClickCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=SelectedItem}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Sorting">
                                    <i:InvokeCommandAction Command="{Binding SortingCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.150" From="12" To="16" Storyboard.TargetProperty="FontSize" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.150" From="16" To="12" Storyboard.TargetProperty="FontSize" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Status}" Value='New Order'>
                                            <Setter Property="Background" Value="FloralWhite"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Status}" Value='Picked'>
                                            <Setter Property="Background" Value="Gray"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <!--<DataGrid.RowDetailsTemplate>
                                <DataTemplate>

                                    <local:OrderDetailsTwoColumns DataContext="{Binding DataContext.OrderDetailsViewModel, RelativeSource={RelativeSource AncestorType=DataGrid}}"></local:OrderDetailsTwoColumns>
                               
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>-->


                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="SizeToHeader">
                                    <DataGridTemplateColumn.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <CheckBox Content="*"
IsChecked="{Binding DataContext.SelectAll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
HorizontalAlignment="Left" 
IsEnabled="{Binding DataContext.SomeOrdersAreIn, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}">
                                            </CheckBox>
                                        </StackPanel>
                                    </DataGridTemplateColumn.Header>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding PrintMe, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  VerticalContentAlignment="Center">
                                                <i:Interaction.Behaviors>
                                                    <shared:SuppressMouseBehavior />
                                                </i:Interaction.Behaviors>
                                            </CheckBox>

                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="No" Width="SizeToHeader">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Index}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn  Header="Time" IsReadOnly="True" Width="SizeToCells" Binding="{Binding ArrivedDisplay}" SortMemberPath="Arrived" />
                                <DataGridTextColumn  Header="Status" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Status}" />
                                <DataGridTextColumn  Header="Market" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Market}" />
                                <DataGridCheckBoxColumn  Header="Returning?" IsReadOnly="True" Width="SizeToCells" Binding="{Binding Returning}" />
                                <DataGridTextColumn  Header="Buyer" IsReadOnly="True" Width="SizeToCells" Binding="{Binding Buyer}" />

                                <DataGridTemplateColumn Header="Product" Width="*" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DataGrid ItemsSource="{Binding Items2}"  IsHitTestVisible="True" HeadersVisibility="None" AutoGenerateColumns="False" GridLinesVisibility="None" BorderThickness="0" HorizontalScrollBarVisibility="Hidden"  VerticalScrollBarVisibility="Hidden" SelectionMode="Single">
                                                <i:Interaction.Behaviors>

                                                    <shared:MouseClickBehavior ClickCommand="{Binding DataContext.ProductClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                </i:Interaction.Behaviors>
                                                <DataGrid.RowStyle>
                                                    <Style TargetType="DataGridRow">
                                                        <Setter Property="Height" Value="20" />
                                                    </Style>
                                                </DataGrid.RowStyle>
                                                <DataGrid.Columns>
                                                    <DataGridTemplateColumn IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Image Source="{Binding pic, Converter={StaticResource ByteArrayToImageConverter}}" Stretch="Uniform" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTextColumn  IsReadOnly="True" Width="*" Binding="{Binding name}">

                                                    </DataGridTextColumn>
                                                    <DataGridTextColumn  IsReadOnly="True" Width="auto" Binding="{Binding qua}" />
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTextColumn  Header="Tool" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Tool}" />
                                <DataGridTextColumn  Header="Price" IsReadOnly="True" Width="SizeToCells" Binding="{Binding PriceDisplay}" SortMemberPath="Price" />
                                <DataGridTextColumn  Header="Country" IsReadOnly="True" Width="SizeToCells" Binding="{Binding Country}" />

                                <DataGridTemplateColumn Header="F" Width="SizeToHeader" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Flag, Converter={StaticResource ByteArrayToImageConverter}}" Stretch="Uniform" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn  Header="Zone" IsReadOnly="True" Width="SizeToCells" Binding="{Binding Zone}" />
                                <DataGridTextColumn  Header="Postage" IsReadOnly="True" Width="SizeToHeader" Binding="{Binding Postage}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>


        <Grid Grid.Row="1">
            <!--<Grid.ColumnDefinitions>

                <ColumnDefinition Width="{Binding SelectedOrder, Converter={StaticResource NullToWidthConverter}}"></ColumnDefinition>
                <ColumnDefinition Width="3*"></ColumnDefinition>
            </Grid.ColumnDefinitions>-->

            <!--<ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"  >
                <StackPanel Orientation="Vertical" Margin="3" >
                <TextBlock><Bold>Order details:</Bold></TextBlock>
                    <ItemsControl ItemsSource="{Binding OrderWidgetItems}">
                        <ItemsControl.Resources>
                            <DataTemplate DataType="{x:Type vm:OrderWidgetViewModelTextBlock}">
                                <TextBlock Text="{Binding Text}" Foreground="#555555"/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type vm:OrderWidgetViewModelTextBlockBold}">
                                <TextBlock Text="{Binding Text}" Foreground="Black" />
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type vm:OrderWidgetViewModelUniformGrid}">
                                <UniformGrid Rows="1" Columns="2">
                                    <TextBlock Text="{Binding BoldText}" Foreground="Black" />
                                    <TextBlock Text="{Binding RegularText}" Foreground="#555555" />
                                </UniformGrid>
                            </DataTemplate>
                        </ItemsControl.Resources>
                    </ItemsControl>

                </StackPanel>
            </ScrollViewer>-->
            <!--<Viewbox Panel.ZIndex="1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" Stretch="Uniform" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Canvas Width="200" Height="200" ClipToBounds="True" RenderTransformOrigin="0.5, 0.5">
                            <Canvas.RenderTransform>
                                <RotateTransform x:Name="MyAnimatedTransform" />
                            </Canvas.RenderTransform>
                            <Canvas.Triggers>
                                <EventTrigger RoutedEvent="Canvas.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
Storyboard.TargetName="MyAnimatedTransform"
Storyboard.TargetProperty="(RotateTransform.Angle)"
From="0.0" To="360" Duration="0:0:2" RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Canvas.Triggers>

                            <Canvas.Resources />

                            <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Name="path19" Fill="#000000">
                                <Path.Data>
                                    <PathGeometry Figures="M202.139 78.988h-23.315c-1.26-3.857-2.82-7.619-4.664-11.245l16.491-16.491c1.953-1.953 1.953-5.119 0-7.071  l-27.693-27.693c-1.953-1.952-5.118-1.952-7.071 0l-16.491 16.491c-3.626-1.844-7.387-3.404-11.245-4.664V5c0-2.761-2.239-5-5-5  H83.988c-2.761 0-5 2.239-5 5v23.315c-3.857 1.26-7.619 2.82-11.245 4.665L51.252 16.488c-0.938-0.938-2.209-1.464-3.536-1.464  c-1.326 0-2.598 0.527-3.536 1.464L16.488 44.181c-1.953 1.953-1.953 5.119 0 7.071l16.491 16.491  c-1.844 3.626-3.404 7.387-4.664 11.245H5c-2.761 0-5 2.239-5 5v39.163c0 2.761 2.239 5 5 5h23.315  c1.26 3.857 2.82 7.619 4.664 11.245l-16.491 16.491c-1.953 1.953-1.953 5.119 0 7.071l27.692 27.693  c1.953 1.952 5.118 1.953 7.071 0l16.491-16.491c3.626 1.844 7.387 3.404 11.245 4.664v23.315c0 2.761 2.239 5 5 5h39.163  c2.761 0 5-2.239 5-5v-23.315c3.857-1.26 7.619-2.82 11.245-4.664l16.491 16.491c1.953 1.952 5.118 1.952 7.071 0l27.693-27.693  c1.953-1.953 1.953-5.119 0-7.071l-16.491-16.491c1.844-3.626 3.404-7.387 4.664-11.245h23.315c2.761 0 5-2.239 5-5V83.988  C207.139 81.227 204.9 78.988 202.139 78.988z M139.531 103.569c0 19.83-16.132 35.962-35.962 35.962s-35.962-16.132-35.962-35.962  s16.132-35.962 35.962-35.962S139.531 83.74 139.531 103.569z" FillRule="NonZero" />
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Viewbox>-->
            <Border Grid.Column="1" BorderThickness="10" Panel.ZIndex="1" BorderBrush="{Binding BorderColor, Converter={StaticResource ColorToBrushConverter}}">
                <ts:TerminalScreen DataContext="{Binding TerminalScreenViewModelProperty}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Border>
        </Grid>






    </Grid>
</UserControl>